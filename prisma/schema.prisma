// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  username   String   @unique @db.VarChar(10)
  email      String   @unique @db.VarChar
  birthday   DateTime  
  country    String
  profile    Profile?
  post       Post[]
  comment    Comment[]
}

model Profile {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  username        String   @unique @db.VarChar(10)
  profile_content String   @db.VarChar(120)
  profile_image   String   @db.VarChar
  User            User     @relation(fields: [user_id], references: [id])
  user_id         Int
}

model Post {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  post_title      String   @unique @db.VarChar(150)
  post_content    String   @db.VarChar(280)
  isPublished     Boolean
  post_image      String?   @db.VarChar
  User            User      @relation(fields: [user_id], references: [id])
  user_id         Int
  comment         Comment[]
}

model Comment {
  id              Int      @id @default(autoincrement())
  parent_id       Int?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  comment_content String   @db.VarChar(250)
  User            User     @relation(fields: [user_id], references: [id])
  user_id         Int
  post            Post     @relation(fields: [post_id], references: [id])
  post_id         Int
  reply           Comment? @relation("commentsReplies", fields: [parent_id], references: [id])
  replies         Comment[]  @relation("commentsReplies")
}